// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Twind from "twind";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as MxRC__ConfigProvider from "./MxRC__ConfigProvider.js";

var init = "\n    relative\n    inline\n    font-normal\n    text(base center text)\n    whitespace-nowrap\n    border(1 gray-300)\n    rounded\n    px-3\n    transition\n    disabled:cursor-not-allowed\n    disabled:text(gray-400 hover:gray-400 focus:gray-400 active:gray-400)\n    disabled:bg(gray-100 hover:gray-100 focus:gray-100 active:gray-100)\n    disabled:border(gray-300 hover:gray-300 focus:gray-300 active:gray-300)\n  ";

var def = "\n    text(hover:primary-hover focus:primary-hover active:primary-active)\n    border(hover:primary-hover focus:primary-hover active:primary-active)\n  ";

var primary = "\n    text-white\n    bg(primary hover:primary-hover focus:primary-hover active:primary-active)\n    border(primary hover:primary-hover focus:primary-hover active:primary-active)\n  ";

var text = "\n    border-none\n    disabled:bg(initial hover:initial focus:initial active:initial)\n  ";

var dashed = def + " border-dashed";

var danger = "danger hover:danger-hover focus:danger-hover active:danger-active";

function make(size, _type, d, block, disabled) {
  var ret = _type === "text" ? (
      d ? [
          init,
          text,
          "text(" + danger + ")"
        ] : [
          init,
          text
        ]
    ) : (
      _type === "primary" ? (
          d ? [
              init,
              primary,
              "bg(" + danger + ")",
              "border(" + danger + ")"
            ] : [
              init,
              primary
            ]
        ) : (
          _type === "default" ? (
              d ? [
                  init,
                  "text(" + danger + ")",
                  "border(" + danger + ")"
                ] : [
                  init,
                  def
                ]
            ) : (
              _type === "dashed" ? (
                  d ? [
                      init,
                      dashed,
                      "text(" + danger + ")",
                      "border(" + danger + ")"
                    ] : [
                      init,
                      dashed,
                      "border-dashed"
                    ]
                ) : [init]
            )
        )
    );
  if (block) {
    ret.push("w-full");
  }
  if (size === "small") {
    ret.push("h-6");
  } else if (size === "default") {
    ret.push("h-8");
  } else {
    ret.push("h-10");
  }
  return Twind.tw(Twind.apply(ret));
}

var Style = {
  init: init,
  def: def,
  primary: primary,
  text: text,
  dashed: dashed,
  danger: danger,
  make: make
};

function MxRC_Button(Props) {
  var _typeOpt = Props.type;
  var size = Props.size;
  var dangerOpt = Props.danger;
  var blockOpt = Props.block;
  var disabledOpt = Props.disabled;
  var childrenOpt = Props.children;
  var _type = _typeOpt !== undefined ? _typeOpt : "default";
  var danger = dangerOpt !== undefined ? dangerOpt : false;
  var block = blockOpt !== undefined ? blockOpt : false;
  var disabled = disabledOpt !== undefined ? disabledOpt : false;
  var children = childrenOpt !== undefined ? Caml_option.valFromOption(childrenOpt) : null;
  var context = React.useContext(MxRC__ConfigProvider.ConfigContext.ctx);
  var size$1 = size !== undefined ? size : context.size;
  var className = make(size$1, _type, danger, block, disabled);
  return React.createElement("button", {
              className: className,
              disabled: disabled
            }, children);
}

var make$1 = MxRC_Button;

export {
  Style ,
  make$1 as make,
  
}
/* react Not a pure module */
