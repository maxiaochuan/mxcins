// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Twind from "twind";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as MxRC__Libs__Twind from "./libs/MxRC__Libs__Twind.js";

var ctx = React.createContext({
      size: "default"
    });

var provider = ctx.Provider;

function MxRC__ConfigProvider$ConfigContext$Provider(Props) {
  var value = Props.value;
  var children = Props.children;
  return React.createElement(provider, {
              value: value,
              children: children
            });
}

var Provider = {
  provider: provider,
  make: MxRC__ConfigProvider$ConfigContext$Provider
};

var ConfigContext = {
  ctx: ctx,
  Provider: Provider
};

function init(param) {
  Twind.setup({
        theme: {
          colors: {
            initial: "initial",
            inherit: "inherit",
            text: {
              DEFAULT: "rgba(0, 0, 0, .85)"
            },
            primary: {
              DEFAULT: "var(--color-primary)",
              hover: "var(--color-primary-hover)",
              active: "var(--color-primary-active)"
            },
            danger: {
              DEFAULT: "var(--color-danger)",
              hover: "var(--color-danger-hover)",
              active: "var(--color-danger-active)"
            }
          },
          transitionTimingFunction: {
            DEFAULT: "cubic-bezier(.645,.045,.355,1)"
          },
          fontSize: {
            base: ['14px', { 'lineHeight': '22px' }]
          },
          extend: {
            colors: MxRC__Libs__Twind.colors
          }
        }
      });
  
}

init(undefined);

var b = MxRC__Libs__Twind.colors.blue;

var r = MxRC__Libs__Twind.colors.red;

var colors_primary = {
  base: b[500],
  hover: b[400],
  active: b[600]
};

var colors_danger = {
  base: r[500],
  hover: r[400],
  active: r[600]
};

var colors = {
  primary: colors_primary,
  danger: colors_danger
};

var style = "\n:root {\n  --color-primary: " + colors_primary.base + ";\n  --color-primary-hover: " + colors_primary.hover + ";\n  --color-primary-active: " + colors_primary.active + ";\n  --color-danger: " + colors_danger.base + ";\n  --color-danger-hover: " + colors_danger.hover + ";\n  --color-danger-active: " + colors_danger.active + ";\n}\nbutton:focus {\n  outline: 0;\n}\n";

function MxRC__ConfigProvider(Props) {
  var sizeOpt = Props.size;
  var childrenOpt = Props.children;
  var size = sizeOpt !== undefined ? sizeOpt : "default";
  var children = childrenOpt !== undefined ? Caml_option.valFromOption(childrenOpt) : null;
  React.useLayoutEffect(function () {
        var ele = document.createElement("style");
        ele.innerHTML = style;
        var head = document.querySelector("head");
        if (!(head == null)) {
          head.appendChild(ele);
        }
        
      });
  var value = React.useMemo((function () {
          return {
                  size: size
                };
        }), [size]);
  return React.createElement(React.Fragment, undefined, React.createElement(MxRC__ConfigProvider$ConfigContext$Provider, {
                  value: value,
                  children: children
                }));
}

var make = MxRC__ConfigProvider;

export {
  ConfigContext ,
  init ,
  colors ,
  style ,
  make ,
  
}
/* ctx Not a pure module */
