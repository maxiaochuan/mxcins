// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as MxRC__Libs__React from "../_libs/MxRC__Libs__React.bs.js";
import * as MxRC__Button__Twind from "./MxRC__Button__Twind.bs.js";
import * as MxRC__Button__Utils from "./MxRC__Button__Utils.bs.js";
import * as MxRC__ConfigProvider from "../config-provider/MxRC__ConfigProvider.bs.js";
import * as MxRC__Button__IconBody from "./MxRC__Button__IconBody.bs.js";

var make = React.forwardRef(function (Props, ref) {
      var className = Props.className;
      var style = Props.style;
      var size = Props.size;
      var _typeOpt = Props.type;
      var shapeOpt = Props.shape;
      var dangerOpt = Props.danger;
      var blockOpt = Props.block;
      var disabledOpt = Props.disabled;
      var ghostOpt = Props.ghost;
      var loadingOpt = Props.loading;
      var icon = Props.icon;
      var children = Props.children;
      var onClick = Props.onClick;
      var _type = _typeOpt !== undefined ? _typeOpt : "default";
      var shape = shapeOpt !== undefined ? shapeOpt : "default";
      var danger = dangerOpt !== undefined ? dangerOpt : false;
      var block = blockOpt !== undefined ? blockOpt : false;
      var disabled = disabledOpt !== undefined ? disabledOpt : false;
      var ghost = ghostOpt !== undefined ? ghostOpt : false;
      var loading = loadingOpt !== undefined ? loadingOpt : false;
      var context = React.useContext(MxRC__ConfigProvider.ConfigContext.ctx);
      var size$1 = Belt_Option.getWithDefault(size, context.size);
      var onClick$1 = function (evt) {
        if (onClick !== undefined && !disabled) {
          evt.preventDefault();
          Curry._1(onClick, evt);
          return ;
        }
        
      };
      var iconOnly = children !== undefined ? false : icon !== undefined;
      var className$1 = MxRC__Button__Twind.make(className, size$1, _type, shape, danger, ghost, block, disabled, loading, iconOnly);
      var icon$1 = React.createElement(MxRC__Button__IconBody.make, {
            loading: loading,
            icon: icon,
            iconOnly: iconOnly
          });
      var kids = React.Children.map(Belt_Option.getWithDefault(children, null), (function (child) {
              if (!(MxRC__Libs__React.Children.isString(child) || MxRC__Libs__React.Children.isNumber(child))) {
                return child;
              }
              if (!(MxRC__Libs__React.Children.isString(child) && MxRC__Button__Utils.isTwoCNChar(child))) {
                return React.createElement("span", undefined, child);
              }
              var string = child.split("").join(" ");
              return React.createElement("span", undefined, string);
            }));
      var tmp = {
        className: className$1,
        disabled: disabled,
        onClick: onClick$1
      };
      var tmp$1 = Belt_Option.map((ref == null) ? undefined : Caml_option.some(ref), (function (prim) {
              return prim;
            }));
      if (tmp$1 !== undefined) {
        tmp.ref = Caml_option.valFromOption(tmp$1);
      }
      if (style !== undefined) {
        tmp.style = Caml_option.valFromOption(style);
      }
      return React.createElement("button", tmp, icon$1, kids);
    });

var IconBody;

export {
  IconBody ,
  make ,
  
}
/* make Not a pure module */
