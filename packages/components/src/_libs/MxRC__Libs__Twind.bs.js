// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Twind from "twind";
import * as MxRC__Colord from "./MxRC__Colord.bs.js";
import * as Content from "@twind/content";
import * as Colors from "@ant-design/colors";

function atw($$class, classes) {
  if ($$class !== undefined) {
    return [
              Twind.tw(Twind.apply(classes)),
              $$class
            ].join(" ");
  } else {
    return Twind.tw(Twind.apply(classes));
  }
}

var background = MxRC__Colord.RGB.toS(MxRC__Colord.hsv2rgb(MxRC__Colord.HSV.make(0, 0.0, 0.96, undefined, undefined)));

var conf = {
  darkMode: "class",
  plugins: {
    content: Content.content
  },
  preflight: {
    ":root": {
      "--color-primary": Colors.presetPalettes.blue.primary,
      "--color-primary-hover": Colors.presetPalettes.blue[4],
      "--color-primary-active": Colors.presetPalettes.blue[6],
      "--color-primary-outline": Colors.presetPalettes.blue[1],
      "--color-danger": Colors.presetPalettes.red.primary,
      "--color-danger-hover": Colors.presetPalettes.red[4],
      "--color-danger-active": Colors.presetPalettes.red[6],
      "--color-link": Colors.presetPalettes.blue.primary,
      "--color-link-hover": Colors.presetPalettes.blue[4],
      "--color-link-active": Colors.presetPalettes.blue[6],
      "--color-warning": Colors.presetPalettes.gold.primary,
      "--color-warning-hover": Colors.presetPalettes.gold[4],
      "--color-warning-active": Colors.presetPalettes.gold[6],
      "--color-warning-outline": Colors.presetPalettes.gold[1],
      "--color-error": Colors.presetPalettes.red.primary,
      "--color-error-hover": Colors.presetPalettes.red[4],
      "--color-error-active": Colors.presetPalettes.red[6],
      "--color-error-outline": Colors.presetPalettes.red[1]
    },
    "button:focus": {
      outline: "0"
    },
    ":focus-visible": {
      outline: "0"
    },
    svg: {
      "vertical-align": "initial"
    }
  },
  theme: {
    content: {
      empty: "\"\""
    },
    colors: {
      initial: "initial",
      transparent: "transparent",
      white: "#fff",
      black: "#000",
      primary: {
        DEFAULT: "var(--color-primary)",
        hover: "var(--color-primary-hover)",
        active: "var(--color-primary-active)"
      },
      danger: {
        DEFAULT: "var(--color-danger)",
        hover: "var(--color-danger-hover)",
        active: "var(--color-danger-active)"
      },
      link: {
        DEFAULT: "var(--color-link)",
        hover: "var(--color-link-hover)",
        active: "var(--color-link-active)"
      },
      warning: {
        DEFAULT: "var(--color-warning)",
        hover: "var(--color-warning-hover)",
        active: "var(--color-warning-active)",
        outline: "var(--color-warning-outline)"
      },
      error: {
        DEFAULT: "var(--color-error)",
        hover: "var(--color-error-hover)",
        active: "var(--color-error-active)",
        outline: "var(--color-error-outline)"
      },
      text: {
        DEFAULT: "rgba(0, 0, 0, .85)",
        secondary: "rgba(0, 0, 0, .45)",
        disabled: "rgba(0, 0, 0, 0.25)"
      },
      background: {
        DEFAULT: background,
        disabled: background
      },
      border: {
        DEFAULT: MxRC__Colord.RGB.toS(MxRC__Colord.hsv2rgb(MxRC__Colord.HSV.make(0, 0.0, 0.85, undefined, undefined)))
      }
    },
    fontSize: {
      xs: [
        "0.75rem",
        {
          lineHeight: "1rem"
        }
      ],
      sm: [
        "0.875rem",
        {
          lineHeight: "1.375rem"
        }
      ],
      base: [
        "1rem",
        {
          lineHeight: "1.5rem"
        }
      ],
      lg: [
        "1.125rem",
        {
          lineHeight: "1.75rem"
        }
      ],
      xl: [
        "1.25rem",
        {
          lineHeight: "1.75rem"
        }
      ]
    },
    padding: (theme => {
        const spacing = theme('spacing');
        const padding = {
          ...spacing,
          '2-bordered': `calc(${spacing[2]} - 1px)`,
          '3-bordered': `calc(${spacing[3]} - 1px)`,
          '4-bordered': `calc(${spacing[4]} - 1px)`,
          'y6-bordered': `calc(${spacing[3]} - 0.5rem - 1px)`,
          'y8-bordered': `calc(${spacing[4]} - 0.6875rem - 1px)`,
          'y10-bordered': `calc(${spacing[5]} - 0.75rem - 1px)`,
        };
        return padding;
      }),
    minWidth: (theme => theme('width')),
    boxShadow: {
      "input-focus": "0 0 0 2px var(--color-primary-outline)",
      "input-focus-warning": "0 0 0 2px var(--color-warning-outline)",
      "input-focus-error": "0 0 0 2px var(--color-error-outline)"
    },
    zIndex: {
      auto: "auto",
      "0": "0",
      "1": "1",
      "10": "10",
      "20": "20",
      "30": "30",
      "40": "40",
      "50": "50"
    },
    transitionTimingFunction: {
      DEFAULT: "ease"
    },
    transitionDuration: {
      DEFAULT: "300ms"
    }
  }
};

export {
  atw ,
  background ,
  conf ,
  
}
/* background Not a pure module */
