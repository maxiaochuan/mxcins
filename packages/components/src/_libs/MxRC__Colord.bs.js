// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function make(h, s, v, a, param) {
  var _h = h;
  while(_h > 360) {
    _h = _h - 360 | 0;
  };
  while(_h < 0) {
    _h = _h + 360 | 0;
  };
  var _s = s;
  while(_s > 1.0) {
    _s = 1.0;
  };
  while(_s < 0.0) {
    _s = 0.0;
  };
  var _v = v;
  while(_v > 1.0) {
    _v = 1.0;
  };
  while(_v < 0.0) {
    _v = 0.0;
  };
  return {
          h: _h,
          s: _s,
          v: v,
          a: Belt_Option.getWithDefault(a, 1.0)
        };
}

var HSV = {
  make: make
};

function make$1(r, g, b, a) {
  return {
          r: r,
          g: g,
          b: b,
          a: Belt_Option.getWithDefault(a, 1.0)
        };
}

function toS(c) {
  var name = c.a === 1.0 ? "rgb" : "rgba";
  var r = String(c.r);
  var g = String(c.g);
  var b = String(c.b);
  var a = c.a === 1.0 ? "" : "," + c.a.toFixed(2);
  return name + "(" + r + "," + g + "," + b + a + ")";
}

function toHEX(c) {
  var r = c.r.toString(16);
  var g = c.g.toString(16);
  var b = c.b.toString(16);
  var a = (c.a * 255.0 | 0).toString(16);
  var r$1 = r.length === 1 ? "0" + r : r;
  var g$1 = g.length === 1 ? "0" + g : g;
  var b$1 = b.length === 1 ? "0" + b : b;
  var a$1 = a.length === 1 ? "0" + a : a;
  return "#" + r$1 + b$1 + g$1 + (
          a$1 === "ff" ? "" : a$1
        );
}

var RGB = {
  make: make$1,
  toS: toS,
  toHEX: toHEX
};

function hsv2rgb(hsv) {
  var h = hsv.h;
  var s = hsv.s;
  var v = hsv.v;
  var c = v * s;
  var hi = h / 60.0;
  var x = c * (1 - ((hi | 0) % 2 - 1 | 0) | 0);
  var match = hi | 0;
  var match$1;
  switch (match) {
    case 0 :
        match$1 = [
          c,
          x,
          0.0
        ];
        break;
    case 1 :
        match$1 = [
          x,
          c,
          0.0
        ];
        break;
    case 2 :
        match$1 = [
          0.0,
          c,
          x
        ];
        break;
    case 3 :
        match$1 = [
          0.0,
          x,
          c
        ];
        break;
    case 4 :
        match$1 = [
          x,
          0.0,
          c
        ];
        break;
    case 5 :
        match$1 = [
          c,
          0.0,
          x
        ];
        break;
    default:
      match$1 = [
        0.0,
        0.0,
        0.0
      ];
  }
  var m = v - c;
  return make$1(Math.round((match$1[0] + m) * 255.0) | 0, Math.round((match$1[1] + m) * 255.0) | 0, Math.round((match$1[2] + m) * 255.0) | 0, hsv.a);
}

export {
  HSV ,
  RGB ,
  hsv2rgb ,
  
}
/* No side effect */
