// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Twind from "twind";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as MxRC__ConfigProvider from "../config-provider/MxRC__ConfigProvider.bs.js";

var init = "inline-block relative w-full m-0 border(1 gray-300) min-w-0 rounded-sm text(sm text) overflow-visible transition";

function make(className, size) {
  var classes = [init];
  classes.push(size === "small" ? "h-6 px-2-bordered py-inline-bordered-sm" : (
          size === "default" ? "h-8 px-3-bordered py-inline-bordered" : "h-10 px-3-bordered py-inline-bordered-lg text-base"
        ));
  var match = Twind.tw(Twind.apply(classes));
  if (className !== undefined) {
    return [
              match,
              className
            ].join(" ");
  } else {
    return match;
  }
}

var InputTwind = {
  init: init,
  make: make
};

function MxRC__Input(Props) {
  var className = Props.className;
  var style = Props.style;
  var size = Props.size;
  var placeholder = Props.placeholder;
  var context = React.useContext(MxRC__ConfigProvider.ConfigContext.ctx);
  var size$1 = Belt_Option.getWithDefault(size, context.size);
  var className$1 = make(className, size$1);
  var tmp = {
    className: className$1,
    type: "text"
  };
  if (style !== undefined) {
    tmp.style = Caml_option.valFromOption(style);
  }
  if (placeholder !== undefined) {
    tmp.placeholder = Caml_option.valFromOption(placeholder);
  }
  return React.createElement("input", tmp);
}

var make$1 = MxRC__Input;

export {
  InputTwind ,
  make$1 as make,
  
}
/* react Not a pure module */
