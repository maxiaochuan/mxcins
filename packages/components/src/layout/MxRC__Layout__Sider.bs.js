// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Twind from "twind";
import * as Nanoid from "nanoid";
import * as Css from "twind/css";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as MxRC__Layout from "./MxRC__Layout.bs.js";

var init = "relative min-w-0 transition-all";

function make(className) {
  var classes = [
    init,
    Css.css({
          "& > div": {
            height: "100%",
            marginTop: "-0.1.px",
            paddingTop: "0.1.px"
          }
        })
  ];
  var match = Twind.tw(Twind.apply(classes));
  if (className !== undefined) {
    return [
              match,
              className
            ].join(" ");
  } else {
    return match;
  }
}

var LayoutSiderTwind = {
  init: init,
  make: make
};

function MxRC__Layout__Sider(Props) {
  var className = Props.className;
  var style = Props.style;
  var widthOpt = Props.width;
  var collapsedOpt = Props.collapsed;
  var collapsedWidthOpt = Props.collapsedWidth;
  var children = Props.children;
  var width = widthOpt !== undefined ? widthOpt : 200;
  var collapsed = collapsedOpt !== undefined ? collapsedOpt : false;
  var collapsedWidth = collapsedWidthOpt !== undefined ? collapsedWidthOpt : 80;
  var context = React.useContext(MxRC__Layout.LayoutContext.ctx);
  React.useEffect((function () {
          var id = "sider-" + Nanoid.nanoid();
          Curry._1(context.sider.add, id);
          return (function (param) {
                    return Curry._1(context.sider.remove, id);
                  });
        }), [context]);
  var width$1 = (
      collapsed ? collapsedWidth : width
    ).toString() + "px";
  var style$1 = Object.assign({}, {
        maxWidth: width$1,
        minWidth: width$1,
        width: width$1,
        flex: "0 0 " + width$1
      }, Belt_Option.getWithDefault(style, {}));
  var className$1 = make(className);
  var children$1 = Belt_Option.getWithDefault(children, null);
  return React.createElement("aside", {
              className: className$1,
              style: style$1
            }, React.createElement("div", undefined, children$1));
}

var make$1 = MxRC__Layout__Sider;

export {
  LayoutSiderTwind ,
  make$1 as make,
  
}
/* react Not a pure module */
