// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Belt_Float from "rescript/lib/es6/belt_Float.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Webapi__Dom__HtmlElement from "rescript-webapi/src/Webapi/Dom/Webapi__Dom__HtmlElement.bs.js";

function getDomRect(node) {
  var rect = node.getBoundingClientRect();
  return {
          top: rect.top,
          bottom: rect.bottom,
          left: rect.left,
          right: rect.right,
          width: rect.width,
          height: rect.height
        };
}

function getPointPos(point, rect) {
  if (point === "bl") {
    return [
            rect.left,
            rect.bottom
          ];
  } else if (point === "br") {
    return [
            rect.right,
            rect.bottom
          ];
  } else if (point === "cc") {
    return [
            rect.left + rect.width / 2.0,
            rect.top + rect.height / 2.0
          ];
  } else if (point === "cl") {
    return [
            rect.left,
            rect.top + rect.height / 2.0
          ];
  } else if (point === "cr") {
    return [
            rect.right,
            rect.top + rect.height / 2.0
          ];
  } else if (point === "tc") {
    return [
            rect.left + rect.width / 2.0,
            rect.top
          ];
  } else if (point === "tl") {
    return [
            rect.left,
            rect.top
          ];
  } else if (point === "tr") {
    return [
            rect.right,
            rect.top
          ];
  } else {
    return [
            rect.left + rect.width / 2.0,
            rect.bottom
          ];
  }
}

function align(source, target, points, offsetX, offsetY, param) {
  var sourceRect = getDomRect(source);
  var targetRect = getDomRect(target);
  var match = getPointPos(points[0], sourceRect);
  var match$1 = getPointPos(points[1], targetRect);
  var movedX = match$1[0] - match[0];
  var movedY = match$1[1] - match[1];
  var partial_arg = window;
  var getComputedStyle = function (param) {
    return partial_arg.getComputedStyle(param);
  };
  var sourceComputedtyle = Curry._1(getComputedStyle, source);
  var sourceCurrentTop = Belt_Option.getWithDefault(Belt_Float.fromString(sourceComputedtyle.top), 0.0);
  var sourceCurrentLeft = Belt_Option.getWithDefault(Belt_Float.fromString(sourceComputedtyle.left), 0.0);
  var sourceToTop = String(sourceCurrentTop + movedY + Belt_Option.getWithDefault(offsetY, 0.0)) + "px";
  var sourceToLeft = String(sourceCurrentLeft + movedX + Belt_Option.getWithDefault(offsetX, 0.0)) + "px";
  var sourceStyle = Webapi__Dom__HtmlElement.ofElement(source).style;
  sourceStyle.setProperty("top", sourceToTop, "");
  sourceStyle.setProperty("left", sourceToLeft, "");
  
}

var DomMover = {
  getDomRect: getDomRect,
  getPointPos: getPointPos,
  align: align
};

export {
  DomMover ,
  
}
/* Webapi__Dom__HtmlElement Not a pure module */
